{
    "contents" : "require(neuralnet)\nrequire(RMySQL)\nrequire(ff)\nrequire(googleVis)\nrequire(Metrics)\nrequire(ppls)\n\nrow.size <- 52560\nrow.size.monthly <<- 4380\nmat.size <<- 12\npowdata <- ff(NA, dim=row.size, vmode=\"double\")\n\nquery <- \"select t.pow from onshore_SITE_07829 t where (t.mesdt >= 20060101 && t.mesdt < 20070101);\"\ndrv <- dbDriver(\"MySQL\")\ncon <- dbConnect(drv, host=\"localhost\", dbname=\"eastwind\", user=\"sachin\", pass=\"password\")\npowdata <<- data.frame(dbGetQuery(con, statement=query), check.names=FALSE)\n\n\npredict <- function(){\n  d06 <- as.vector(c(unlist(powdata)))\n  d06.monthly <- matrix(d06, nrow=row.size.monthly, ncol=mat.size, byrow=FALSE)\n  colnames(d06.monthly) <- paste(\"mon\",c(1:12), sep=\"\")\n  data.mat <- data.frame(d06.monthly)\n  #out <- neuralnet(mon11 ~ mon1+mon2+mon3+mon4+mon5+mon6+mon7+mon8+mon9+mon10,\n  #                 data.mat,\n  #                 hidden =1,\n  #                 #threshold = 0.01,\n  #                 #stepmax = 1000,\n  #                 rep = 10,\n#                   startweights = NULL,\n#                   learningrate.limit = NULL,\n#                   learningrate.factor = list(minus = 0.5, plus = 1.2),\n#                   learningrate=10,\n#                   #lifesign = \"none\",\n#                   #lifesign.step = 1000,\n#                   algorithm = \"backprop\",\n#                   err.fct = \"sse\",\n#                   act.fct = \"tanh\",\n#                   #linear.output = FALSE,\n#                   #exclude = NULL,\n#                   #constant.weights = NULL,\n#                   #likelihood = FALSE\n#                   )\n\n  out <<- neuralnet(mon11 ~ mon1 + mon2 + mon3 + mon4 + mon5 + mon6 + mon7 + mon8 + mon9 + mon10,\n                    data.mat,\n                    hidden=10,\n                    rep=10,\n                    err.fct=\"sse\",\n                    linear.output=FALSE\n                   )\n  plot.nn(out)\n  test <<- as.data.frame(as.vector(d06.monthly[,\"mon12\"]))\n  #pred <<- compute(out, test[,1])\n}\n\ntypeof(test[,1])\ncompute(out, test[,1])\nhead(unlist(out$net.result))\nres <- unlist(out$net.result)\nplot(res, type=\"l\")\n\npredict()\n\n\n#plotting1\nx = test\ny = as.vector(unlist(pred))[4386:8765]\ndataToPlot = data.frame(seq(1,4380),x,y)\nLine <- gvisLineChart(dataToPlot)\nplot(Line)\n\n\n#plotting2\nx = test\ny = as.vector(unlist(pred))[4385:8765]\nplot(cbind(x,y),col=c(\"blue\",\"red\") ,type=\"l\")\nplot(x, type=\"l\", col=\"red\")\nplot(y, type=\"l\", col=\"blue\")\n\n\n#rmse\nrmse(x,y)\n\n\n#normalizing vector\nvec = 1:5\nnorm = normalize.vector(vec)\n\n",
    "created" : 1419246018205.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "79408717",
    "id" : "BB66F156",
    "lastKnownWriteTime" : 1419271069,
    "path" : "~/Programming/Thesis/tsaggr/simple/neuralnet_month_forecast.R",
    "project_path" : "neuralnet_month_forecast.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}